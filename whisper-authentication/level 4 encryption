
//Using BCrypt for encryption with salting
require('dotenv').config();
const express = require("express");
const bodyParser = require("body-parser");
const ejs = require("ejs");
const mongoose = require('mongoose');
const bcrypt = require('bcrypt'); //using bcrypt
const saltRounds = 10;// Salt rounds


const app = express();

app.set('view engine', 'ejs');

app.use(bodyParser.urlencoded({
  extended: true
}));
app.use(express.static("public"));
mongoose.connect('mongodb://127.0.0.1:27017/userDB').then(() => {
    console.log('Connected to the database');
  })
  .catch(err => {
    console.error('Error connecting to the database:', err);
  });

  const userSchema = new mongoose.Schema({  
    email: String,
    password: String
  })

 
  
  const User = mongoose.model("User", userSchema);
  



/////AUTHENTICATION//////

app.get("/",(req,res)=>{
    res.render("home")

})
app.get("/register",(req,res)=>{
    res.render("register")
    
})
app.get("/login",(req,res)=>{

    res.render("login")
    
})

app.post("/register",  (req,res)=>{
  bcrypt.hash(req.body.password, saltRounds, async function(err, hash) {//using bcrypt
      const newUser = new User ({ 
          email: req.body.username,
          password: hash
        });
        try {
          await newUser.save();
          res.render("secrets");
        } catch (err) {
          console.log(err);
        }
  });

});




app.post("/login", async (req,res)=>{
  const username = req.body.username;
  const password = req.body.password;
try{
  const foundLogin = await User.findOne({email:username})
  if (foundLogin){
    bcrypt.compare(password, foundLogin.password, function(err, result) {//another bcrypt
      if(result === true){
        res.render("secrets");
      }else{
        res.send("Incorrect login details")
        console.log(err);
      }
  });
  }
}catch(err){
  console.log(err);
}


})


let port = process.env.PORT;
if (port == null || port == "") {
  port = 3000;
}

app.listen(port,()=>{
console.log("Server Running on Port 3000")
});